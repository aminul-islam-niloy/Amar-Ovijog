@using AmarOvijog.Models
@using X.PagedList
@using X.PagedList.Mvc.Core
@model IPagedList<District>
<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>@Html.DisplayNameFor(model => model[0].Id)</th>
            <th>@Html.DisplayNameFor(model => model[0].Name)</th>
            <th>@Html.DisplayNameFor(model => model[0].Lat)</th>
            <th>@Html.DisplayNameFor(model => model[0].Lon)</th>
            <th>@Html.DisplayNameFor(model => model[0].Url)</th>
            <th>@Html.DisplayNameFor(model => model[0].Division.Name)</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>@Html.DisplayFor(modelItem => item.Id)</td>
                <td>@Html.DisplayFor(modelItem => item.Name)</td>
                <td>@Html.DisplayFor(modelItem => item.Lat)</td>
                <td>@Html.DisplayFor(modelItem => item.Lon)</td>
                <td>@Html.DisplayFor(modelItem => item.Url)</td>
                <td>@Html.DisplayFor(modelItem => item.Division.Name)</td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>

<!-- Pagination controls -->
<div class="pagination mb-4">
    @if (Model.HasPreviousPage)
    {
        <a class="btn btn-secondary mx-1"
           href="@Url.Action("Index", new { page = 1 })">First</a>

        <a class="btn btn-secondary mx-1"
           href="@Url.Action("Index", new { page = Model.PageNumber - 1 })">Previous</a>
    }

    @for (int i = 1; i <= Model.PageCount; i++)
    {
        <a class="btn btn-secondary mx-1"
           href="@Url.Action("Index", new { page = i })"
           class="@(i == Model.PageNumber ? "active" : "")">@i</a>
    }

    @if (Model.HasNextPage)
    {
        <a class="btn btn-secondary mx-1"
           href="@Url.Action("Index", new { page = Model.PageNumber + 1 })">Next</a>

        <a class="btn btn-secondary mx-1"
           href="@Url.Action("Index", new { page = Model.PageCount })">Last</a>
    }
</div>
